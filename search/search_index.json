{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"chapters/","title":"Table of contents","text":"<ul> <li>Chapter 1</li> <li>Chapter 10</li> <li>Chapter 2</li> <li>Chapter 3</li> <li>Chapter 4</li> <li>Chapter 11</li> <li>Chapter 21</li> </ul>"},{"location":"chapters/chapter1/","title":"Chapter 1: Introduction","text":""},{"location":"chapters/chapter1/#quantum-computing-expanded-lecture-summaries","title":"Quantum Computing - Expanded Lecture Summaries","text":""},{"location":"chapters/chapter1/#lecture-1-introduction-to-quantum-physics-and-quantum-computing","title":"Lecture 1: Introduction to Quantum Physics and Quantum Computing","text":""},{"location":"chapters/chapter1/#key-concepts","title":"Key Concepts:","text":"<ol> <li>Fundamental Quantum Principles:</li> <li>Concepts: Superposition, entanglement, and wave-particle duality.</li> <li> <p>Example: Double-slit experiment and visualization of spin states.</p> </li> <li> <p>Quantum vs. Classical Systems:</p> </li> <li>Classical bits (binary states: 0 and 1) vs. quantum bits (qubits, which can exist in superposition).</li> <li> <p>Example: A coin with heads or tails (classical) vs. a spinning coin (quantum).</p> </li> <li> <p>Superposition and Measurement:</p> </li> <li>A qubit can be in a linear combination of \\(|0\\rangle\\) and \\(|1\\rangle\\).</li> <li>Measurement collapses the qubit\u2019s state into either \\(|0\\rangle\\) or \\(|1\\rangle\\).</li> <li>Example: Using Qiskit to create and measure a superposition state.</li> </ol>"},{"location":"chapters/chapter1/#lecture-2-basis-orthonormal-basis-bra-ket-notation-and-measurement","title":"Lecture 2: Basis, Orthonormal Basis, Bra-Ket Notation, and Measurement","text":""},{"location":"chapters/chapter1/#key-concepts_1","title":"Key Concepts:","text":"<ol> <li>Basis States and Orthonormality:</li> <li>Basis states form the foundation of qubit representation.</li> <li>Orthonormality ensures \\(|0\\rangle\\) and \\(|1\\rangle\\) are distinct and normalized.</li> <li> <p>Example: Demonstrating orthogonality of \\(|0\\rangle\\) and \\(|1\\rangle\\) through dot product.</p> </li> <li> <p>Bra-Ket Notation:</p> </li> <li>\u201cKet\u201d (\\(|\\ \\rangle\\)) represents a state; \u201cBra\u201d (\\(\\langle \\ |\\)) is its conjugate transpose.</li> <li> <p>Example: Writing \\(|\\psi\\rangle = \\alpha |0\\rangle + \\beta |1\\rangle\\).</p> </li> <li> <p>Quantum Measurement:</p> </li> <li>Probability of measurement is determined by the squared magnitude of coefficients.</li> <li>Example: Simulating measurement of \\(|\\psi\\rangle\\) using Qiskit\u2019s Aer simulator.</li> </ol>"},{"location":"chapters/chapter1/#lecture-3-bloch-sphere-eigenstates-eigenvectors-projection-operator","title":"Lecture 3: Bloch Sphere, Eigenstates, Eigenvectors, Projection Operator","text":""},{"location":"chapters/chapter1/#key-concepts_2","title":"Key Concepts:","text":"<ol> <li>Bloch Sphere Representation:</li> <li>Visualizing qubit states as points on a unit sphere.</li> <li> <p>Example: Show \\(|0\\rangle\\) and \\(|1\\rangle\\) on the poles; visualize superposition states on the surface.</p> </li> <li> <p>Eigenstates and Eigenvectors:</p> </li> <li>Eigenstates of an operator correspond to measurable quantities.</li> <li> <p>Example: Pauli-Z eigenstates are \\(|0\\rangle\\) and \\(|1\\rangle\\).</p> </li> <li> <p>Projection Operator:</p> </li> <li>Projects a quantum state onto a particular eigenstate.</li> <li>Example: Project \\(|\\psi\\rangle = |0\\rangle + |1\\rangle\\) onto \\(|0\\rangle\\) using Qiskit.</li> </ol>"},{"location":"chapters/chapter1/#lecture-4-binary-data-qubits-multi-qubits-quantum-gates-and-classical-gates","title":"Lecture 4: Binary Data, Qubits, Multi-Qubits, Quantum Gates, and Classical Gates","text":""},{"location":"chapters/chapter1/#key-concepts_3","title":"Key Concepts:","text":"<ol> <li>Single-Qubit Representation:</li> <li>Binary data encoded into \\(|0\\rangle\\) or \\(|1\\rangle\\).</li> <li> <p>Example: Encode binary \u201c0\u201d as \\(|0\\rangle\\) and binary \u201c1\u201d as \\(|1\\rangle\\).</p> </li> <li> <p>Multi-Qubit States:</p> </li> <li>Tensor products form multi-qubit systems (e.g., \\(|00\\rangle\\), \\(|01\\rangle\\)).</li> <li> <p>Example: Constructing a 2-qubit system in Qiskit.</p> </li> <li> <p>Quantum Gates:</p> </li> <li>Operations like X (NOT), H (Hadamard), and Z gates.</li> <li>Example: Apply an H gate to \\(|0\\rangle\\) to create superposition.</li> </ol>"},{"location":"chapters/chapter1/#lecture-5-quantum-circuits-and-algorithms","title":"Lecture 5: Quantum Circuits and Algorithms","text":""},{"location":"chapters/chapter1/#key-concepts_4","title":"Key Concepts:","text":"<ol> <li>Quantum Circuit Design:</li> <li>Using Qiskit to construct quantum circuits with gates and measurement.</li> <li> <p>Example: Implementing a basic circuit with Hadamard and CNOT gates.</p> </li> <li> <p>Quantum Algorithms:</p> </li> <li>Introduction to algorithms like Deutsch-Josza and Grover's search.</li> <li>Example: Simulate the Deutsch-Josza algorithm to identify constant functions.</li> </ol>"},{"location":"chapters/chapter1/#lecture-6-quantum-error-correction","title":"Lecture 6: Quantum Error Correction","text":""},{"location":"chapters/chapter1/#key-concepts_5","title":"Key Concepts:","text":"<ol> <li>Error Sources in Quantum Computing:</li> <li>Errors from decoherence and gate imperfections.</li> <li> <p>Example: Simulate noise in a quantum circuit with Qiskit.</p> </li> <li> <p>Error Correction Codes:</p> </li> <li>Use of redundancy and encoding to detect and correct errors.</li> <li>Example: Implementing the three-qubit bit-flip code in Qiskit.</li> </ol>"},{"location":"chapters/chapter1/#lecture-7-advanced-topics-in-quantum-computing","title":"Lecture 7: Advanced Topics in Quantum Computing","text":""},{"location":"chapters/chapter1/#key-concepts_6","title":"Key Concepts:","text":"<ol> <li>Quantum Entanglement:</li> <li>Strong correlations between qubits beyond classical limits.</li> <li> <p>Example: Generate Bell states and verify entanglement properties.</p> </li> <li> <p>Quantum Cryptography:</p> </li> <li>Use of quantum principles for secure communication.</li> <li>Example: Simulate the BB84 protocol for quantum key distribution.</li> </ol> <p>Note: This document summarizes key concepts and examples from lectures on Quantum Computing. For more details and practical demonstrations, refer to accompanying resources or the Qiskit documentation.</p>"},{"location":"chapters/chapter10/","title":"Tutorial - Unitary matrices and orthonormal basis","text":""},{"location":"chapters/chapter10/#cs4268-quantum-computing-tutorial-1","title":"CS4268 - Quantum Computing Tutorial - 1","text":""},{"location":"chapters/chapter10/#general-information","title":"General Information","text":"<ul> <li>Inline equations to be wrapped in single dollar signs ($).</li> <li>Block equations to be wrapped in double dollar signs ($$).</li> </ul> <p>Here is the LaTeX-formatted Markdown version for your Quantum Computing Tutorial:</p>"},{"location":"chapters/chapter10/#general-information-useful-for-all-questions","title":"General Information (Useful for All Questions)","text":"<ul> <li>Stochastic Matrix: A square matrix is stochastic if and only if:</li> <li>All its entries are non-negative reals.</li> <li> <p>The entries of each of its columns sum to 1.</p> </li> <li> <p>Unitary Matrix: A square matrix \\( U \\) is unitary if and only if it satisfies:   $$   U U^\\dagger = U^\\dagger U = I   $$   where \\( U^\\dagger \\) is the conjugate transpose of \\( U \\), and \\( I \\) is the identity matrix.</p> </li> <li> <p>Inner Product:   For two column vectors \\( v \\) and \\( u \\), their inner product is defined as:   $$   \\langle v, u \\rangle = v^\\dagger u, \\quad \\langle u, v \\rangle = u^\\dagger v   $$</p> </li> <li> <p>\\( p \\)-Norm of a Vector:   The \\( p \\)-norm of a vector \\( v = (v_1, v_2, \\dots, v_n) \\) in a complex \\( n \\)-dimensional vector space is given by:   $$   | v |_p = \\left( |v_1|^p + |v_2|^p + \\dots + |v_n|^p \\right)^{1/p}   $$</p> </li> <li> <p>Orthonormal Set:   A set of vectors \\( \\{ v_1, v_2, \\dots, v_n \\} \\) is orthonormal if:</p> </li> <li>Each vector has an \\( \\ell_2 \\)-norm of 1.</li> <li> <p>The inner products of distinct vectors are 0.</p> </li> <li> <p>Singular Value Decomposition (SVD):   For every \\( n \\times n \\) complex matrix \\( A \\) of rank \\( r \\leq n \\), there exist unique positive real values \\( s_1, s_2, \\dots, s_r \\) and orthonormal sets \\( \\{ v_1, v_2, \\dots, v_r \\} \\), \\( \\{ w_1, w_2, \\dots, w_r \\} \\) such that:   $$   A = \\sum_{i=1}^{r} s_i w_i v_i^\\dagger   $$   where \\( s_i \\) are singular values, and \\( \\{ v_i \\}, \\{ w_i \\} \\) are right and left singular vectors, respectively.</p> </li> </ul>"},{"location":"chapters/chapter10/#question-1-unitary-matrices-and-orthonormality","title":"Question 1: Unitary Matrices and Orthonormality","text":""},{"location":"chapters/chapter10/#question","title":"Question:","text":"<p>A matrix \\( U \\) is unitary if it satisfies: $$ U^\\dagger U = U U^\\dagger = I $$ Given the orthonormal states: $$ v_1 = \\frac{3}{5} \\alpha \\otimes \\alpha + \\frac{4}{5} \\beta \\otimes \\beta $$ $$ v_2 = \\frac{4}{5} \\alpha \\otimes \\alpha - \\frac{3}{5} \\beta \\otimes \\beta $$ $$ v_3 = \\frac{2}{\\sqrt{5}} \\alpha \\otimes \\beta + \\frac{i}{\\sqrt{5}} \\beta \\otimes \\alpha $$ $$ v_4 = \\frac{1}{\\sqrt{5}} \\alpha \\otimes \\beta - \\frac{2i}{\\sqrt{5}} \\beta \\otimes \\alpha $$ Verify that these states form an orthonormal basis, i.e., show that: $$ \\langle v_i, v_j \\rangle = \\delta_{ij} $$ where \\( \\delta_{ij} \\) is the Kronecker delta.</p>"},{"location":"chapters/chapter10/#answer","title":"Answer:","text":"<p>We compute the inner product for each pair: $$ \\langle v_i, v_j \\rangle = \\sum_{k} (v_i^k)^* v_j^k $$ After computing for all pairs, we find: $$ \\langle v_i, v_j \\rangle = 1 \\text{ for } i = j, \\quad 0 \\text{ for } i \\neq j $$ Thus, the given states are mutually orthonormal, forming a valid basis.</p>"},{"location":"chapters/chapter10/#takeaway","title":"Takeaway:","text":"<ul> <li>The set of vectors given is orthonormal and forms a valid quantum basis.</li> <li>Unitary matrices preserve the inner product and are essential in quantum mechanics.</li> </ul>"},{"location":"chapters/chapter10/#question-2-orthonormal-basis-and-identity-matrix","title":"Question 2: Orthonormal Basis and Identity Matrix","text":""},{"location":"chapters/chapter10/#question_1","title":"Question:","text":"<p>Given an orthonormal set \\( \\{v_1, v_2, ..., v_n\\} \\), show that the sum of their outer products forms the identity matrix: $$ A = \\sum_{i=1}^{n} v_i v_i^\\dagger = I_{n\\times n} $$ Verify this property by applying \\( A \\) to an arbitrary vector \\( w \\).</p>"},{"location":"chapters/chapter10/#answer_1","title":"Answer:","text":"<p>Let \\( w \\) be any arbitrary vector expressed in terms of the basis: $$ w = \\sum_{i=1}^{n} \\alpha_i v_i $$ Applying \\( A \\): $$ A w = \\sum_{i=1}^{n} v_i v_i^\\dagger \\sum_{j=1}^{n} \\alpha_j v_j $$ Since \\( A w = w \\), \\( A \\) acts as the identity matrix.</p>"},{"location":"chapters/chapter10/#takeaway_1","title":"Takeaway:","text":"<ul> <li>Any set of orthonormal basis vectors satisfies \\( \\sum v_i v_i^\\dagger = I \\).</li> <li>This property is crucial in quantum state representation.</li> </ul>"},{"location":"chapters/chapter10/#question-3-unitary-matrix-properties","title":"Question 3: Unitary Matrix Properties","text":""},{"location":"chapters/chapter10/#question_2","title":"Question:","text":"<p>Show that a unitary matrix \\( U \\) satisfies the singular value decomposition (SVD) property: $$ U = \\sum_{i=1}^{r} s_i w_i v_i^\\dagger $$ where \\( s_i \\) are singular values and \\( \\{v_i\\} \\), \\( \\{w_i\\} \\) are orthonormal sets. Prove that for unitary matrices, all singular values satisfy \\( s_i = 1 \\).</p>"},{"location":"chapters/chapter10/#answer_2","title":"Answer:","text":"<p>Using SVD: $$ U^\\dagger U = \\sum_{i=1}^{r} s_i^2 w_i w_i^\\dagger = I $$ which is only true if \\( s_i = 1 \\) for all \\( i \\). Thus, unitary matrices preserve norms.</p>"},{"location":"chapters/chapter10/#takeaway_2","title":"Takeaway:","text":"<ul> <li>Unitary matrices have singular values equal to 1.</li> <li>They preserve the length of quantum states, making them essential for quantum operations.</li> </ul>"},{"location":"chapters/chapter10/#question-4-stochastic-matrices-and-norm-preservation","title":"Question 4: Stochastic Matrices and Norm Preservation","text":""},{"location":"chapters/chapter10/#question_3","title":"Question:","text":"<p>A column stochastic matrix \\( S \\) satisfies: $$ \\sum_{i=1}^{n} s_{ij} = 1, \\quad \\forall j $$ Show that for any vector \\( v \\), its \\( \\ell_1 \\)-norm remains unchanged under \\( S \\): $$ |Sv|_1 = |v|_1 $$</p>"},{"location":"chapters/chapter10/#answer_3","title":"Answer:","text":"\\[ Applying \\( S \\): \\[ w = S v, \\quad w_i = \\sum_{j=1}^{n} s_{ij} v_j \\] Then: \\[ \\|w\\|_1 = \\sum_{i=1}^{n} |w_i| = \\sum_{i=1}^{n} \\sum_{j=1}^{n} s_{ij} |v_j| \\] Since \\( S \\) is stochastic: \\[ \\sum_{i=1}^{n} s_{ij} = 1 \\] Thus, \\( \\|w\\|_1 = \\|v\\|_1 \\), proving norm preservation. \\]"},{"location":"chapters/chapter10/#takeaway_3","title":"Takeaway:","text":"<ul> <li>Stochastic matrices preserve the \\( \\ell_1 \\)-norm.</li> <li>They model probabilistic transformations in quantum mechanics.</li> </ul>"},{"location":"chapters/chapter11/","title":"Chapter 11: LatexA","text":"<p>This is a simple document with LaTeX rendering. $$ E = mc^2 $$</p> <p>\\section*{Lecture 11: Quantum Gates and Operators}</p> <p>\\subsection*{Pauli-X Gate} The Pauli-X gate can be represented in terms of the Hadamard (\\(H\\)) and Pauli-Z (\\(Z\\)) gates as:</p> \\[\\begin{equation}     X = H Z H \\end{equation}\\] <p>Matrix representation of the Pauli-X gate:</p> \\[\\begin{equation}     X = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix} \\end{equation}\\] <p>\\subsection*{Hadamard Gate} The Hadamard gate transforms the basis states as follows:</p> \\[\\begin{equation}     H|0\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle), \\quad     H|1\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle - |1\\rangle) \\end{equation}\\] <p>Matrix representation:</p> \\[\\begin{equation} H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix} \\end{equation}\\] <p>\\subsection*{Bloch Sphere Representation} A qubit state can be visualized on the Bloch Sphere and is given by:</p> \\[\\begin{equation}     |\\psi\\rangle = \\cos\\frac{\\theta}{2}|0\\rangle + e^{i\\phi} \\sin\\frac{\\theta}{2}|1\\rangle \\end{equation}\\] <p>where: \\begin{itemize}     \\item \\( \\theta \\) represents the polar angle, determining the probability distribution between \\( |0\\rangle \\) and \\( |1\\rangle \\).     \\item \\( \\phi \\) represents the phase difference between \\( |0\\rangle \\) and \\( |1\\rangle \\). \\end{itemize}</p> <p>\\subsection*{Eigenstates and Operators}</p> <p>\\textbf{Pauli-Z Operator:}</p> \\[\\begin{equation}     Z|0\\rangle = +|0\\rangle, \\quad Z|1\\rangle = -|1\\rangle \\end{equation}\\] <p>Matrix representation:</p> \\[\\begin{equation}     Z = \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix} \\end{equation}\\] <p>\\subsection*{Projection Operators} Projection operators for measuring in the computational basis:</p> \\[\\begin{equation}     \\mathbf{P}_0 = |0\\rangle\\langle0| = \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; 0 \\end{bmatrix}, \\quad     \\mathbf{P}_1 = |1\\rangle\\langle1| = \\begin{bmatrix} 0 &amp; 0 \\\\ 0 &amp; 1 \\end{bmatrix} \\end{equation}\\] <p>Measurement probabilities for a general qubit state \\( \\psi = \\alpha|0\\rangle + \\beta|1\\rangle \\):</p> \\[\\begin{equation}     P(|0\\rangle) = |\\alpha|^2, \\quad P(|1\\rangle) = |\\beta|^2 \\end{equation}\\] <p>\\subsection*{CNOT Gate (Controlled-NOT)} Matrix representation of the Controlled-NOT (CNOT) gate:</p> \\[\\begin{equation}     \\text{CNOT} = \\begin{bmatrix}          1 &amp; 0 &amp; 0 &amp; 0 \\\\          0 &amp; 1 &amp; 0 &amp; 0 \\\\          0 &amp; 0 &amp; 0 &amp; 1 \\\\          0 &amp; 0 &amp; 1 &amp; 0      \\end{bmatrix} \\end{equation}\\] <p>\\section*{Lecture 11: Quantum Gates and Operators}</p> <p>\\subsection*{Pauli-X Gate} The Pauli-X gate can be represented in terms of the Hadamard (\\(H\\)) and Pauli-Z (\\(Z\\)) gates as:</p> \\[\\begin{equation}     X = H Z H \\end{equation}\\] \\[\\begin{equation}     X = H Z H \\end{equation}\\]"},{"location":"chapters/chapter2/","title":"Chapter 2: Basis of quantum","text":""},{"location":"chapters/chapter2/#introduction-to-quantum-computing-and-physical-basics-of-computing","title":"Introduction to Quantum Computing and Physical Basics of Computing","text":""},{"location":"chapters/chapter2/#sharat-batra","title":"Sharat Batra","text":""},{"location":"chapters/chapter2/#march-15-2025","title":"March 15, 2025","text":""},{"location":"chapters/chapter2/#class-lecture-fundamental-quantum-computing-concepts","title":"Class Lecture: Fundamental Quantum Computing Concepts","text":"<p>Good morning, everyone! Today we're going to explore some fundamental concepts in quantum computing that help us understand how quantum systems differ from classical systems and the unique properties of quantum operations.  </p>"},{"location":"chapters/chapter2/#information-scaling-in-classical-vs-quantum-computing","title":"Information Scaling in Classical vs. Quantum Computing","text":"<p>Question: How does the information content of a computing system scale under classical vs. quantum computing with each extra (q)bit added to the system? How does the picture change after measurement?  </p> <p>In classical computing, we work with bits that can be either 0 or 1. When we add bits to a classical system, the number of possible configurations scales as \\( 2^n \\), where \\( n \\) is the number of bits. Each additional bit doubles the number of possible states the system can represent.  </p> <p>For example:  </p> <ul> <li>1 bit: 2 possible states (0 or 1)  </li> <li>2 bits: 4 possible states (00, 01, 10, 11)  </li> <li>3 bits: 8 possible states  </li> </ul> <p>However, in quantum computing, qubits can exist in superposition states, meaning an \\( n \\)-qubit system can represent \\( 2^n \\) states simultaneously. This property creates exponential scaling potential.  </p> <p>Upon measurement, the superposition collapses to a single classical outcome, meaning we retrieve only one of the possible configurations, reducing the quantum advantage to a classical state.  </p>"},{"location":"chapters/chapter2/#quantum-gates-and-the-bloch-sphere","title":"Quantum Gates and the Bloch Sphere","text":"<p>Question: Each quantum gate transforms the input state (i.e., the point on the Bloch sphere) to the output state. Each point on the surface of the sphere can represent the outcome of a transformation, thus an infinite number of quantum gates exist. Does this hold for all quantum gates, for an arbitrary number of qubits?  </p> <p>For single-qubit systems, the Bloch sphere provides a complete visualization. Any pure quantum state can be represented as a point on the sphere. Single-qubit quantum gates correspond to rotations or transformations on this sphere. Since these transformations are continuous (described by unitary matrices), there are infinitely many possible single-qubit quantum gates.  </p> <p>For multi-qubit systems, the Bloch sphere representation no longer suffices. A two-qubit system requires a 4-dimensional complex vector space, making it impossible to represent on a simple sphere. Instead, quantum gates operate within this higher-dimensional space using unitary transformations such as the CNOT gate, which entangles qubits and cannot be represented solely on the Bloch sphere.  </p>"},{"location":"chapters/chapter2/#measurement-gates-and-unitarity","title":"Measurement Gates and Unitarity","text":"<p>Question: Does the measurement gate represent a unitary operation?  </p> <p>The answer is no. Measurement is not a unitary operation because:  </p> <ol> <li>Unitary operations preserve probability (\\( U^{\\dagger} U = I \\)).  </li> <li>Unitary operations are reversible, meaning we can determine the input state from the output state.  </li> </ol> <p>Measurement collapses a quantum state into one of the basis states, irreversibly reducing the quantum superposition into a classical outcome. For example, measuring a qubit in the state  </p> \\[ \\ket{\\Psi} = \\alpha \\ket{0} + \\beta \\ket{1} \\] <p>yields:  </p> <ul> <li>\\( \\ket{0} \\) with probability \\( |\\alpha|^2 \\) </li> <li>\\( \\ket{1} \\) with probability \\( |\\beta|^2 \\) </li> </ul> <p>Since measurement fundamentally changes the system and does not allow for state recovery, it is a non-unitary operation.  </p>"},{"location":"chapters/chapter2/#example-common-quantum-gates-as-matrices","title":"Example: Common Quantum Gates as Matrices","text":"<p>Below are representations of some important quantum gates as matrices:  </p>"},{"location":"chapters/chapter2/#pauli-x-gate-matrix","title":"Pauli-X Gate Matrix","text":"<ul> <li>Pauli-X (NOT Gate): </li> </ul> \\[ X = \\begin{bmatrix}  0 &amp; 1 \\\\ 1 &amp; 0  \\end{bmatrix} \\] <ul> <li>Pauli-Y Gate: </li> </ul> \\[   Y =   \\begin{bmatrix}   0 &amp; -i \\\\   i &amp; 0   \\end{bmatrix} \\] <ul> <li>Pauli-Z Gate: </li> </ul> \\[   Z =   \\begin{bmatrix}   1 &amp; 0 \\\\   0 &amp; -1   \\end{bmatrix} \\] <ul> <li>Hadamard Gate: </li> </ul> \\[   H =   \\frac{1}{\\sqrt{2}}   \\begin{bmatrix}   1 &amp; 1 \\\\   1 &amp; -1   \\end{bmatrix} \\] <ul> <li>CNOT (Controlled-NOT) Gate: </li> </ul> \\[   CNOT =   \\begin{bmatrix}   1 &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; 1 &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1 \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{bmatrix} \\] <ul> <li>General Unitary Transformation for a Single Qubit: </li> </ul> \\[   U =   \\begin{bmatrix}   a &amp; b \\\\   c &amp; d   \\end{bmatrix}, \\quad \\text{where} \\quad U^{\\dagger} U = I \\] <p>Final Thoughts: Any questions before we move on to our next topic? These concepts form the foundation of how we think about quantum information processing and the differences between quantum and classical computing paradigms.  </p>"},{"location":"chapters/chapter2/#scaling-of-information-in-classical-vs-quantum-computing","title":"Scaling of Information in Classical vs. Quantum Computing","text":"<ul> <li>Classical computing scales linearly, with each additional bit doubling the number of possible states. An \\( n \\)-bit system has \\( 2^n \\) possible configurations.  </li> <li>Quantum computing scales exponentially, as an \\( n \\)-qubit system can exist in a superposition of \\( 2^n \\) states simultaneously before measurement.  </li> <li>After measurement, a quantum system collapses to a classical state, losing the exponential advantage in terms of information storage but retaining computational benefits like entanglement and interference.  </li> </ul>"},{"location":"chapters/chapter2/#quantum-gates-and-state-transformations-on-the-bloch-sphere","title":"Quantum Gates and State Transformations on the Bloch Sphere","text":"<ul> <li>Single-qubit gates perform unitary transformations, moving a quantum state on the Bloch sphere. Since these transformations are continuous, infinitely many single-qubit gates exist.  </li> <li>Multi-qubit gates operate in a higher-dimensional Hilbert space, making Bloch sphere visualization impractical beyond one qubit.  </li> <li>While the concept of unitary transformations still applies, multi-qubit interactions (e.g., the CNOT gate) involve entanglement and more complex transformations.  </li> </ul>"},{"location":"chapters/chapter21/","title":"Chapter 21: Try1","text":""},{"location":"chapters/chapter21/#quantum-computing-expanded-lecture-summaries","title":"Quantum Computing - Expanded Lecture Summaries","text":""},{"location":"chapters/chapter21/#lecture-3-bloch-sphere-eigenstates-eigenvectors-projection-operator","title":"Lecture 3: Bloch Sphere, Eigenstates, Eigenvectors, Projection Operator","text":""},{"location":"chapters/chapter21/#key-concepts","title":"Key Concepts","text":""},{"location":"chapters/chapter21/#pauli-x-gate-matrix","title":"Pauli-X Gate Matrix","text":"<p>The Pauli-X gate matrix is:</p> \\[ X = \\begin{bmatrix}  0 &amp; 1 \\\\ 1 &amp; 0  \\end{bmatrix} \\]"},{"location":"chapters/chapter21/#hadamard-gate-matrix","title":"Hadamard Gate Matrix","text":"<p>The Hadamard gate matrix is:</p> \\[ H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix}  1 &amp; 1 \\\\ 1 &amp; -1  \\end{bmatrix} \\]"},{"location":"chapters/chapter21/#pauli-x-gate-identity","title":"Pauli-X Gate Identity","text":"<p>The Pauli-X (NOT) gate satisfies the identity:</p> <p>$$ X = HZH $$ where \\(H\\) is the Hadamard gate.</p> <p>The Pauli-X gate matrix representation:</p> \\[ X = \\begin{bmatrix}  0 &amp; 1 \\\\ 1 &amp; 0  \\end{bmatrix} \\]"},{"location":"chapters/chapter21/#hadamard-transform","title":"Hadamard Transform","text":"<p>The Hadamard gate creates superposition states:</p> \\[ H|0\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle), \\quad H|1\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle - |1\\rangle) \\] <p>Matrix representation:</p> \\[ H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix}  1 &amp; 1 \\\\ 1 &amp; -1  \\end{bmatrix} \\]"},{"location":"chapters/chapter21/#pauli-z-gate-identity","title":"Pauli-Z Gate Identity","text":"<p>The Pauli-Z gate affects the phase of a qubit:</p> \\[ Z|0\\rangle = |0\\rangle, \\quad Z|1\\rangle = -|1\\rangle \\] <p>Matrix representation:</p> \\[ Z = \\begin{bmatrix}  1 &amp; 0 \\\\ 0 &amp; -1  \\end{bmatrix} \\]"},{"location":"chapters/chapter21/#projection-operator","title":"Projection Operator","text":"<p>The projection operator for a qubit basis state:</p> \\[ P_0 = |0\\rangle\\langle0| = \\begin{bmatrix}  1 &amp; 0 \\\\ 0 &amp; 0  \\end{bmatrix}, \\quad P_1 = |1\\rangle\\langle1| = \\begin{bmatrix}  0 &amp; 0 \\\\ 0 &amp; 1  \\end{bmatrix} \\]"},{"location":"chapters/chapter21/#two-qubit-states-and-matrices","title":"Two-Qubit States and Matrices","text":"<p>A general two-qubit state:</p> \\[ |\\psi\\rangle = c_{00}|00\\rangle + c_{01}|01\\rangle + c_{10}|10\\rangle + c_{11}|11\\rangle \\] <p>Matrix representation:</p> \\[ |\\psi\\rangle = \\begin{bmatrix}  c_{00} \\\\ c_{01} \\\\ c_{10} \\\\ c_{11}  \\end{bmatrix} \\]"},{"location":"chapters/chapter21/#toffoli-gate-ccnot","title":"Toffoli Gate (CCNOT)","text":"<p>A three-qubit gate that flips the target qubit if both control qubits are \\( |1\\rangle \\).</p> <p>Matrix representation:</p> \\[ \\text{Toffoli} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\end{bmatrix} \\]"},{"location":"chapters/chapter3/","title":"Chapter 3: Teleportation","text":"<p>Here is the complete question along with its detailed solution:</p>"},{"location":"chapters/chapter3/#problem-description","title":"Problem Description","text":"<p>The goal of this problem is to analyze and demonstrate a quantum teleportation protocol involving three parties: Alice, Bob, and Charlie. The task is to verify whether a shared entangled state can be successfully transferred from Alice to Bob and Charlie, ensuring that the final state is preserved.  </p>"},{"location":"chapters/chapter3/#initial-quantum-state-of-alice-bob-and-charlie","title":"Initial Quantum State of Alice, Bob, and Charlie","text":"<p>We begin with a three-qubit system, where Alice initially possesses two qubits (denoted as \\( A1 \\) and \\( A2 \\)), while Charlie and Bob each have one qubit (denoted as \\( C \\) and \\( B \\), respectively).  </p> <ul> <li>Alice has a two-qubit entangled state \\( |\\Psi\\rangle_{A1C} \\) with Charlie.  </li> <li>Bob and Alice also share a maximally entangled Bell state \\( |\\phi^+\\rangle_{A2B} \\).  </li> </ul> <p>Thus, the initial state before the protocol starts is given by:  </p> \\[ |\\Psi\\rangle_{A1C} \\otimes |\\phi^+\\rangle_{A2B} \\] <p>where:  </p> \\[ |\\Psi\\rangle_{A1C} = \\alpha |00\\rangle + \\beta |01\\rangle + \\gamma |10\\rangle + \\delta |11\\rangle \\] <p>represents the unknown quantum state shared between Alice and Charlie, and  </p> \\[ |\\phi^+\\rangle_{A2B} = \\frac{1}{\\sqrt{2}} \\big(|00\\rangle + |11\\rangle \\big) \\] <p>represents the pre-shared Bell pair between Alice and Bob.  </p> <p>Expanding this tensor product, the full initial state of the system becomes:  </p> \\[ |\\Psi\\rangle_{A1C} \\otimes |\\phi^+\\rangle_{A2B} = \\frac{1}{\\sqrt{2}} \\big( \\alpha |0000\\rangle + \\alpha |0011\\rangle + \\beta |0100\\rangle + \\beta |0111\\rangle + \\gamma |1000\\rangle + \\gamma |1011\\rangle + \\delta |1100\\rangle + \\delta |1111\\rangle \\big) \\] <p>where the qubits are ordered as \\( A1, A2, C, B \\).</p>"},{"location":"chapters/chapter3/#objective","title":"Objective","text":"<p>Alice will apply a series of quantum operations (CNOT and Hadamard), measure her qubits, and communicate the results to Bob, who will then apply correction unitaries to ensure that Bob and Charlie recover the original state \\( |\\Psi\\rangle_{CB} \\). The goal is to prove that the entangled state is successfully teleported, preserving its properties.  </p> <p>Stated below as:</p>"},{"location":"chapters/chapter3/#question-1","title":"Question 1","text":"<p>Alice, Bob, and Charlie share a quantum system where Alice holds two qubits (\\(A1, A2\\)), Bob holds one qubit (\\(B\\)), and Charlie holds one qubit (\\(C\\)). Alice wants to transfer an unknown quantum state \\( |\\Psi\\rangle \\) to Bob and Charlie using quantum teleportation.  </p>"},{"location":"chapters/chapter3/#initial-state-of-the-system","title":"Initial State of the System:","text":"<p>Alice\u2019s first qubit \\(A1\\) and Charlie\u2019s qubit \\(C\\) are entangled in an unknown quantum state:  </p> \\[ |\\Psi\\rangle_{A1C} = \\alpha |00\\rangle + \\beta |01\\rangle + \\gamma |10\\rangle + \\delta |11\\rangle \\] <p>where \\(\\alpha, \\beta, \\gamma, \\delta\\) are complex coefficients satisfying the normalization condition:  </p> \\[ |\\alpha|^2 + |\\beta|^2 + |\\gamma|^2 + |\\delta|^2 = 1 \\] <p>Additionally, Alice\u2019s second qubit (\\(A2\\)) and Bob\u2019s qubit (\\(B\\)) are entangled in a maximally entangled Bell state:  </p> \\[ |\\phi^+\\rangle_{A2B} = \\frac{1}{\\sqrt{2}} (|00\\rangle + |11\\rangle) \\] <p>Thus, the total initial state of the system before Alice applies any operations is:  </p> \\[ |\\Psi\\rangle_{A1C} \\otimes |\\phi^+\\rangle_{A2B} = \\frac{1}{\\sqrt{2}} \\Big( \\alpha |0000\\rangle + \\alpha |0011\\rangle + \\beta |0100\\rangle + \\beta |0111\\rangle + \\gamma |1000\\rangle + \\gamma |1011\\rangle + \\delta |1100\\rangle + \\delta |1111\\rangle \\Big) \\]"},{"location":"chapters/chapter3/#solution","title":"Solution","text":""},{"location":"chapters/chapter3/#step-1-alice-applies-a-cnot-gate-on-her-qubits","title":"Step 1: Alice Applies a CNOT Gate on Her Qubits","text":"<p>Alice applies a CNOT gate on her qubits \\( A1 \\) (control) and \\( A2 \\) (target). The CNOT operation flips the target qubit if the control qubit is \\( |1\\rangle \\).  </p> <p>Applying CNOT to \\( A1 \\) (control) and \\( A2 \\) (target):  </p> \\[ \\frac{1}{\\sqrt{2}} \\Big( \\alpha |0000\\rangle + \\alpha |0011\\rangle + \\beta |0100\\rangle + \\beta |0111\\rangle + \\gamma |1100\\rangle + \\gamma |1111\\rangle + \\delta |1000\\rangle + \\delta |1011\\rangle \\Big) \\]"},{"location":"chapters/chapter3/#step-2-alice-applies-a-hadamard-gate-on-her-first-qubit-a1","title":"Step 2: Alice Applies a Hadamard Gate on Her First Qubit (A1)","text":"<p>The Hadamard gate creates a superposition:  </p> \\[ H |0\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle), \\quad H |1\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle - |1\\rangle) \\] <p>Applying Hadamard on \\( A1 \\):  </p> \\[ \\frac{1}{2} \\Big[ |0\\rangle \\big( \\alpha |000\\rangle + \\alpha |011\\rangle + \\beta |010\\rangle + \\beta |001\\rangle + \\gamma |110\\rangle + \\gamma |101\\rangle + \\delta |100\\rangle + \\delta |111\\rangle \\big)  \\] \\[ + |1\\rangle \\big( \\alpha |000\\rangle + \\alpha |011\\rangle + \\beta |010\\rangle + \\beta |001\\rangle - \\gamma |110\\rangle - \\gamma |101\\rangle - \\delta |100\\rangle - \\delta |111\\rangle \\big) \\Big] \\] <p>This transformation entangles Alice\u2019s qubits, preparing them for measurement.</p>"},{"location":"chapters/chapter3/#step-3-alice-measures-her-qubits","title":"Step 3: Alice Measures Her Qubits","text":"<p>Alice measures her two qubits (\\(A1, A2\\)) in the computational basis (\\(|00\\rangle, |01\\rangle, |10\\rangle, |11\\rangle\\)). The system collapses into one of four possible states, and Bob must apply a correction based on Alice\u2019s result.  </p> <p>Possible outcomes and remaining states for Bob and Charlie:  </p> <ol> <li> <p>If Alice measures \\( |00\\rangle \\): [  \\(|\\Psi\\rangle_{CB} = \\alpha |00\\rangle + \\beta |01\\rangle + \\gamma |10\\rangle + \\delta |11\\rangle\\) ]    \u2192 No correction needed. </p> </li> <li> <p>If Alice measures \\( |01\\rangle \\): [    \\(|\\Psi\\rangle_{CB} = \\alpha |00\\rangle + \\beta |01\\rangle - \\gamma |10\\rangle - \\delta |11\\rangle\\) ]    \u2192 Bob applies \\( Z \\) correction.  </p> </li> <li> <p>If Alice measures \\( |10\\rangle \\):    [    \\(|\\Psi\\rangle_{CB} = \\alpha |10\\rangle + \\beta |11\\rangle + \\gamma |00\\rangle + \\delta |01\\rangle\\)    ]    \u2192 Bob applies \\( X \\) correction.  </p> </li> <li> <p>If Alice measures \\( |11\\rangle \\):    [    \\(|\\Psi\\rangle_{CB} = \\alpha |10\\rangle + \\beta |11\\rangle - \\gamma |00\\rangle - \\delta |01\\rangle\\)    ]    \u2192 Bob applies \\( XZ \\) correction.  </p> </li> </ol>"},{"location":"chapters/chapter3/#step-4-bobs-correction-based-on-alices-measurement","title":"Step 4: Bob\u2019s Correction Based on Alice\u2019s Measurement","text":"<p>Alice sends her measurement results (2 classical bits) to Bob: - \\( |00\\rangle \\) \u2192 No correction. - \\( |01\\rangle \\) \u2192 Apply \\( Z \\). - \\( |10\\rangle \\) \u2192 Apply \\( X \\). - \\( |11\\rangle \\) \u2192 Apply \\( XZ \\).  </p> <p>After Bob applies the necessary corrections, he and Charlie now share the original state \\( |\\Psi\\rangle_{CB} \\), successfully completing the quantum teleportation protocol.  </p>"},{"location":"chapters/chapter3/#conclusion","title":"Conclusion","text":"<p>This process successfully transfers a quantum state using entanglement and classical communication:  </p> <ol> <li>Pre-shared entanglement between Alice &amp; Bob.  </li> <li>Quantum operations (CNOT, Hadamard) applied by Alice.  </li> <li>Measurement of Alice\u2019s qubits.  </li> <li>Classical communication of Alice\u2019s measurement results to Bob.  </li> <li>Bob\u2019s unitary correction operations based on the received classical bits.  </li> </ol> <p>Thus, the quantum state \\( |\\Psi\\rangle \\) is teleported from Alice to Bob and Charlie.</p>"},{"location":"chapters/chapter4/","title":"Chapter 4: New Quantum","text":"<p>\\documentclass{article} \\usepackage{amsmath, amssymb, graphicx} \\usepackage{qcircuit}</p> <p>\\title{Lecture 1: Fundamentals of Quantum States and Measurements} \\date{February 24, 2025}</p> <p>\\begin{document} \\maketitle</p> <p>\\section{Introduction} Quantum computing relies on quantum mechanics principles to manipulate information. This lecture introduces: \\begin{itemize}     \\item Basis and Orthonormal Basis     \\item Bra-Ket Notation (Dirac Notation)     \\item Quantum Measurement     \\item Representing a state in different basis sets \\end{itemize}</p> <p>\\section{Basis and Orthonormal Basis} A basis is a set of vectors that spans a vector space. Any vector in that space can be expressed as a linear combination of basis vectors. For example, in \\(\\mathbb{R}^2\\), the standard basis is: $$ e_1 = \\begin{bmatrix}1\\0\\end{bmatrix}, \\quad e_2 = \\begin{bmatrix}0\\1\\end{bmatrix} $$</p> <p>A vector \\(v \\in \\mathbb{R}^2\\) can be written as: [     v = a e_1 + b e_2 ] A basis is orthonormal if: \\begin{enumerate}     \\item The basis vectors are orthogonal: \\(\\langle e_i | e_j \\rangle = 0\\) for \\(i \\neq j\\).     \\item The basis vectors are normalized: \\(\\langle e_i | e_i \\rangle = 1\\). \\end{enumerate} The computational basis for qubits is: [     |0\\rangle = \\begin{bmatrix}1\\0\\end{bmatrix}, \\quad |1\\rangle = \\begin{bmatrix}0\\1\\end{bmatrix} ]</p> <p>\\section{Bra-Ket Notation (Dirac Notation)} \\begin{itemize}     \\item A ket \\(|\\psi\\rangle\\) represents a column vector in Hilbert space.     \\item A bra \\(\\langle \\psi|\\) is the conjugate transpose (row vector). \\end{itemize} Example: [     |\\psi\\rangle = \\begin{bmatrix}a\\b\\end{bmatrix}, \\quad \\langle \\psi| = \\begin{bmatrix}a^ &amp; b^\\end{bmatrix} ] Inner product: [     \\langle \\phi | \\psi \\rangle = \\sum_i \\phi^*_i \\psi_i ] Outer product: [     |\\psi\\rangle \\langle \\phi| ]</p> <p>\\section{Quantum Measurement} A qubit state can be written as: [     |\\psi\\rangle = \\alpha |0\\rangle + \\beta |1\\rangle ] where \\(\\alpha, \\beta\\) are complex numbers satisfying \\(|\\alpha|^2 + |\\beta|^2 = 1\\). When measured in the computational basis: \\begin{itemize}     \\item \\(|0\\rangle\\) occurs with probability \\(|\\alpha|^2\\).     \\item \\(|1\\rangle\\) occurs with probability \\(|\\beta|^2\\). \\end{itemize} Example: [     |\\psi\\rangle = \\frac{1}{\\sqrt{2}} |0\\rangle + \\frac{1}{\\sqrt{2}} |1\\rangle ] Measurement results in \\(|0\\rangle\\) or \\(|1\\rangle\\) with equal probability.</p> <p>\\section{Representing a State in Different Basis Sets} Besides the computational basis, we can use: \\subsection{Hadamard Basis} [     |+\\rangle = \\frac{|0\\rangle + |1\\rangle}{\\sqrt{2}}, \\quad |-\\rangle = \\frac{|0\\rangle - |1\\rangle}{\\sqrt{2}} ] \\subsection{Eigenbasis of Pauli-X} Eigenvectors: [     X = \\begin{bmatrix} 0 &amp; 1 \\ 1 &amp; 0 \\end{bmatrix} ] [     |+\\rangle = \\frac{|0\\rangle + |1\\rangle}{\\sqrt{2}}, \\quad |-\\rangle = \\frac{|0\\rangle - |1\\rangle}{\\sqrt{2}} ]</p> <p>\\section{Python and Qiskit Implementation} \\begin{verbatim} from qiskit import QuantumCircuit, Aer, execute from qiskit.visualization import plot_bloch_vector import numpy as np</p>"},{"location":"chapters/chapter4/#define-a-quantum-circuit-with-one-qubit","title":"Define a quantum circuit with one qubit","text":"<p>qc = QuantumCircuit(1) qc.h(0)  # Apply Hadamard gate qc.measure_all()</p>"},{"location":"chapters/chapter4/#simulate","title":"Simulate","text":"<p>simulator = Aer.get_backend('aer_simulator') result = execute(qc, simulator, shots=1000).result() counts = result.get_counts() print(\"Measurement Results:\", counts)</p> <p>def plot_state():     plot_bloch_vector([1/np.sqrt(2), 0, 1/np.sqrt(2)])  # |+&gt; state plot_state() \\end{verbatim}</p> <p>\\section{Summary} \\begin{itemize}     \\item Basis and Orthonormal Basis: Computational and Hadamard basis.     \\item Bra-Ket Notation: Representation of quantum states.     \\item Measurement: Probabilistic collapse to basis states.     \\item Different Basis Representations: Transforming states across different bases. \\end{itemize}</p> <p>\\end{document}</p>"},{"location":"prompts/01-course-description/","title":"course description","text":"<p>Circuits for Signal Processing EE 2015, Spring 2023</p> <p>Teaching Team</p> <p>Prof. Sharat Batra Office: 5-167 Keller Hall  Email: batra052@umn.edu  Office Hours: Monday 11:30 \u2013 12:30 pm/Wednesday 1:00 \u2013 2:15 pm </p> <p>TAs:    Afful Anthony Joseph (afful003@umn.edu)  Office hours: xx</p> <p>Lab TAs: Afful Anthony Joseph (afful003@umn.edu)   Office Hours:                 Tonushree Dutta dutta085@umn.edu Office Hours        Setlem Bhargavi setle002@umn.edu Office Hours</p> <p>Undergraduate TAs </p> <p>Thelma Ade ade00005@umn.edu (Tuesday 11:30 \u2013 12:30 PM) Aaron Olsen olse0366@umn.edu Paris Lim lim00199@umn.edu  (OH: Thursday 3:30 \u2013 4:30 PM </p> <p>Course Description (4.0 credits; Co-Req. PHYS 1302, &amp; MATH 2243 or MATH 2373 or MATH 2573.)</p> <p>Introduction to analog electrical systems with particular emphasis on audio circuits and signals. Time and frequency domain representations. Kirchhoff\u2019s laws. Power. Inductance and Capacitance. Introduction to op-amp circuits and their audio applications. Complex numbers and phasors. Introduction to Fourier Series. RLC circuits &amp; basic filter networks. Laboratory experiments on audio amplifiers, distortion, intermodulation products, low-level differential amplifiers, bass/treble filters.</p> <p>Instruction Lectures (BATRA) Tues, Thurs 9:45 \u2013 11:00 AM Location: Akerman Hall 209. </p> <p>Discussion (BATRA) Monday, 1:25 PM 2:15 PM; Tuesday 12:20 \u2013 1:10 PM                     Ratul Das Wednesday 1:25 \u2013 2:15 PM</p> <p>Location: Keller 3-170 </p> <p>Textbook Electric Circuits, 11th Ed. James Nilsson &amp; Susan Riede. Prentice Hall, 2019.  EE Notes, Emad Ebbini, on canvas, 2018. Homework: 40% credit for late homework.</p> <p>Homework will typically be assigned on Friday and will be due the following Sunday by 10:59pm.  Most homework will be done via the textbook\u2019s website (Mastering Engineering, ME).  Occasionally, we may ask questions via Canvas, where CamScanner, Scanner Pro, or a similar app can be used to create a PDF to upload.</p> <p>Discussion and collaboration (but not copying!) are encouraged for homework assignments. On canvas HomeWorks and all exams, you MUST show your work to receive any credit (partial or full). Answers without proper units or graphs without the axes labeled will be considered incorrect.</p> <p>Exams There will be two midterm exams and a final exam. You may NOT use books, cell phones, computers, other communication devices, etc. As stated above, you must show your work to receive partial credit; proper units and labels for graphs are required for full credit. Exam grade concerns or discrepancies must be submitted in writing within 1 week after exams are returned.</p> <p>Put these in your calendar now. Any reasons to change must be done first week of class: Exam #1:    Tues Feb 25         during class Exam #2:    Thurs Apr. 3        during class Final Exam: Monday May 12           8-10 am (set by university)</p> <p>Please review the official University of Minnesota Student Code of Conduct.</p> <p>Grades Final course grades will be determined based on the following  12% Homework            5%     Discussion attendance            8%     Quiz (TBD) 25% Laboratory 15% Exam 1 15% Exam 2 20% Final Exam The University\u2019s grade definitions can be found here. </p> <p>Expected Workload  EE2015 is a 4-credit course with lecture, laboratory and recitation components. The expected workload for this course is 42 \u2013 45 hours per credit averaged over the course of the semester. This expectation is in accordance with the University Policy found here: https://policy.umn.edu/education/studentwork</p> <p>Disability Accommodations (DRC website or email drc@umn.edu.) The University of Minnesota views disability as an important aspect of diversity, and is committed to providing equitable access to learning opportunities for all students. The Disability Resource Center (DRC) is the campus office that collaborates with students who have disabilities to provide and/or arrange reasonable accommodations. \u2022   If you have, or think you have, a disability in any area such as, mental health, attention, learning, chronic health, sensory, or physical, please contact the DRC office (UM Twin Cities - 612.626.1333) to arrange a confidential discussion regarding equitable access and reasonable accommodations. \u2022   Students with short-term disabilities, such as a broken arm, can often work with me to minimize classroom barriers. In situations where additional assistance is needed, students should contact the DRC as noted above. \u2022   If you are registered with the DRC and have a disability accommodation letter dated for this semester or this year, please contact me the first week of class to review how the accommodations will be applied in the course. \u2022   If I am unable to provide exam accommodations in the department, you will need to schedule them with the DRC and take them in the DRC Testing Center. The Testing Center requires you to schedule exams with at least SEVEN days of advance notice.  To schedule your exams, please complete the online form. \u2022   If you are registered with the DRC and have questions or concerns about your accommodations, contact your (access consultant/disability specialist). Mental Health and Stress Management As a student you may experience a range of issues that can cause barriers to learning, such as strained relationships, increased anxiety, alcohol/drug problems, feeling down, difficulty concentrating and/or lack of motivation. These mental health concerns or stressful events may lead to diminished academic performance or reduce your ability to participate in daily activities. University of Minnesota services are available to assist you with addressing these and other concerns you may be experiencing.  You can learn more about the broad range of confidential mental health services available on campus via  http://www.mentalhealth.umn.edu</p> <p>EE 2015 Lab Requirements: The courses EE2015, EE2115, and EE3101 have connected labs. You will need to keep track of all lab kit components that are provided in this course for use in future courses. Parts that are lost or broken need to be purchased by the student at the ECE Depot (ecestock@umn.edu).</p> <p>You are encouraged to bring your laptop or tablet to the lab for running software and viewing manuals.</p> <p>Course Outline</p> <p>Week    Date    Lecture Topics  Readings    Labs 1   Jan 21/23   Review of Physics and Math Concepts Ch. 1-3 NR &amp; EE Notes   No Lab 2   Jan 28/30   Circuit Analysis using Nodes    Ch. 4 NR    Lab 0 Starts 3   Feb 4/6     Circuit Analysis using Loops    Ch. 4 NR   4   Feb 11/13   Superposition and Source Equivalents    Ch. 4 NR    Lab 0 Notebook; Pre-lab 1.1 5   Feb 18/20   Review and Operational Amplifier Intro          Pre-lab 1.2 6   Feb 25/27   Exam 1, Operational Amplifier Intro Ch. 5 NR    Lab 1 Notebook; Pre-lab 2</p> <p>7   Mar 4/6 Applications of Op Amps and Input/output impedance  EE Notes    Lab 2 Notebook; Pre-lab 3.1     Mar 11/13   Spring Break!      8   Mar 18/20   Inductance, Capacitance &amp; Frequency dep impedance   Ch. 6 &amp;. 7 NR  9   Mar 25/27   Complex Numbers and Phasors Ch. 9 NR    Lab 3 Report, Pre-lab 4.1 10  Apr 1/3 Review, Exam 2      Pre-lab 4.2 11  Apr 8/10    Phasors in Circuits                             Ch. 9 NR    Lab 4 Notebook; Pre-lab 5 12  Apr 15/17   Bode Plots, Filtering   Ch. 14 NR   Lab 5 Report</p> <p>Chain Audio Amplifier Writeup (completed in lab) 13  Apr 22/24   Active Filters  Ch. 15 NR  14  Apr 29/M 1  Fourier Series  Ch. 16 NR  15       (Final May 12 8-10 am)    NR = Nilsson and Riedel : EE Notes = Additional real-life notes provided by Prof. Ebbini on canvas</p> <p>Email Policy In compliance with FERPA and the Minnesota Privacy Act, students must use their University of Minnesota email account for conducting official business with the University of Minnesota. Messages originating from other email addresses will be disregarded.</p> <p>Intellectual Property Lectures, notes, assignments, exams, and all other material for this course the intellectual property of the instructor.  Students may not distribute instructor-provided notes or any other course materials (except to other members of the same class) without the express written consent of the instructor. Students are not permitted to record any part of a class/recitation/other session unless explicitly granted permission by the instructor. Read more about student responsibilities here:  http://policy.umn.edu/education/studentresp</p>"},{"location":"prompts/01-course-description/#reponse","title":"reponse","text":"<p>Here is the numbered list of 150 essential concepts for the undergraduate course in circuits, ordered from foundational to more advanced topics:  </p> <ol> <li>Electrical charge  </li> <li>Current (I)  </li> <li>Voltage (V)  </li> <li>Power (P)  </li> <li>Energy (W)  </li> <li>Resistance (R)  </li> <li>Ohm\u2019s Law  </li> <li>Conductance (G)  </li> <li>Kirchhoff\u2019s Current Law (KCL)  </li> <li>Kirchhoff\u2019s Voltage Law (KVL)  </li> <li>Node analysis  </li> <li>Loop analysis  </li> <li>Series resistors  </li> <li>Parallel resistors  </li> <li>Voltage division  </li> <li>Current division  </li> <li>Superposition theorem  </li> <li>Thevenin\u2019s theorem  </li> <li>Norton\u2019s theorem  </li> <li>Source transformation  </li> <li>Mesh current method  </li> <li>Nodal voltage method  </li> <li>Dependent sources  </li> <li>Power dissipation in resistors  </li> <li>Maximum power transfer theorem  </li> <li>Delta-Wye (\u0394-Y) transformation  </li> <li>Capacitance (C)  </li> <li>Inductance (L)  </li> <li>Reactance (X)  </li> <li>Impedance (Z)  </li> <li>Admittance (Y)  </li> <li>Capacitors in series  </li> <li>Capacitors in parallel  </li> <li>Inductors in series  </li> <li>Inductors in parallel  </li> <li>Transient response of RC circuits  </li> <li>Transient response of RL circuits  </li> <li>Time constant (\u03c4)  </li> <li>Step response of RC circuits  </li> <li>Step response of RL circuits  </li> <li>Natural response of RC circuits  </li> <li>Natural response of RL circuits  </li> <li>First-order circuits  </li> <li>Second-order circuits  </li> <li>RLC circuits  </li> <li>Resonance in RLC circuits  </li> <li>Quality factor (Q)  </li> <li>Bandwidth (BW)  </li> <li>Damping factor (\u03b6)  </li> <li>Complex numbers  </li> <li>Euler\u2019s formula  </li> <li>Phasors  </li> <li>Sinusoidal steady-state analysis  </li> <li>Impedance in AC circuits  </li> <li>Admittance in AC circuits  </li> <li>Ohm\u2019s Law for AC circuits  </li> <li>Power in AC circuits  </li> <li>Real power (P)  </li> <li>Reactive power (Q)  </li> <li>Apparent power (S)  </li> <li>Power factor (PF)  </li> <li>Power factor correction  </li> <li>RMS (Root Mean Square) values  </li> <li>Instantaneous power  </li> <li>Average power  </li> <li>Complex power  </li> <li>Fourier series  </li> <li>Fourier transform  </li> <li>Frequency response  </li> <li>Bode plots  </li> <li>Poles and zeros  </li> <li>Transfer functions  </li> <li>Low-pass filters (LPF)  </li> <li>High-pass filters (HPF)  </li> <li>Band-pass filters (BPF)  </li> <li>Band-stop filters (BSF)  </li> <li>Active filters  </li> <li>Passive filters  </li> <li>Butterworth filters  </li> <li>Chebyshev filters  </li> <li>Operational amplifiers (Op-Amps)  </li> <li>Ideal Op-Amp assumptions  </li> <li>Inverting Op-Amp  </li> <li>Non-inverting Op-Amp  </li> <li>Voltage follower (buffer)  </li> <li>Summing amplifier  </li> <li>Difference amplifier  </li> <li>Integrator circuit  </li> <li>Differentiator circuit  </li> <li>Instrumentation amplifier  </li> <li>Comparator circuits  </li> <li>Clipping circuits  </li> <li>Clamping circuits  </li> <li>Rectifiers (half-wave and full-wave)  </li> <li>Voltage regulators  </li> <li>Zener diodes  </li> <li>Bipolar Junction Transistor (BJT) basics  </li> <li>BJT as a switch  </li> <li>BJT as an amplifier  </li> <li>Common emitter configuration  </li> <li>Common collector configuration  </li> <li>Common base configuration  </li> <li>Field Effect Transistor (FET) basics  </li> <li>MOSFET operation  </li> <li>MOSFET as a switch  </li> <li>MOSFET as an amplifier  </li> <li>Small-signal analysis  </li> <li>Large-signal analysis  </li> <li>Amplifier gain (voltage, current, and power)  </li> <li>Input and output impedance  </li> <li>Feedback in circuits  </li> <li>Negative feedback  </li> <li>Positive feedback  </li> <li>Oscillators  </li> <li>Wien bridge oscillator  </li> <li>Colpitts oscillator  </li> <li>Hartley oscillator  </li> <li>Schmitt triggers  </li> <li>Pulse circuits  </li> <li>Digital logic levels  </li> <li>Boolean algebra  </li> <li>Logic gates (AND, OR, NOT, XOR, etc.)  </li> <li>Combinational logic circuits  </li> <li>Sequential logic circuits  </li> <li>Flip-flops (SR, D, JK, T)  </li> <li>Counters  </li> <li>Shift registers  </li> <li>Memory elements (SRAM, DRAM)  </li> <li>Analog-to-Digital Converters (ADC)  </li> <li>Digital-to-Analog Converters (DAC)  </li> <li>PWM (Pulse Width Modulation)  </li> <li>Power electronics basics  </li> <li>Switching regulators (Buck, Boost, Buck-Boost)  </li> <li>Linear regulators  </li> <li>Transformers  </li> <li>Mutual inductance  </li> <li>Coupled circuits  </li> <li>Audio amplifiers  </li> <li>Distortion and intermodulation  </li> <li>Differential amplifiers  </li> <li>Common-mode rejection ratio (CMRR)  </li> <li>Noise in circuits  </li> <li>Thermal noise  </li> <li>Shot noise  </li> <li>Electromagnetic interference (EMI)  </li> <li>Signal integrity  </li> <li>Transmission lines  </li> <li>Wave propagation in circuits  </li> <li>Smith charts  </li> <li>PCB design considerations  </li> </ol> <p>This list follows a logical progression from basic electrical principles to advanced circuit concepts used in signal processing and audio applications. Let me know if you'd like modifications!</p>"},{"location":"prompts/02-enumeration/","title":"concept enumeration","text":""},{"location":"prompts/02-enumeration/#prompt","title":"prompt","text":"<p>Please create a numbered list of the 150 most essential concepts in an undergraduate course in circuits we have described above. Below is the course description. For each concept, just return the concept name and use acronyms and abbreviations when appropriate.  They will be used to label a network graph. Make sure that the concepts are distinct and are not duplicates.</p> <p>Start with the most basic foundational concepts that are prerequisites for the course, and then proceed from the basic to the most complex concepts. Return the numbered list just one concept per line.</p>"},{"location":"prompts/02-enumeration/#course-description","title":"course description","text":"<p>Circuits for Signal Processing EE 2015, Spring 2023</p> <p>Teaching Team</p> <p>Prof. Sharat Batra Office: 5-167 Keller Hall  Email: batra052@umn.edu  Office Hours: Monday 11:30 \u2013 12:30 pm/Wednesday 1:00 \u2013 2:15 pm </p> <p>TAs:    Afful Anthony Joseph (afful003@umn.edu)  Office hours: xx</p> <p>Lab TAs: Afful Anthony Joseph (afful003@umn.edu)   Office Hours:                 Tonushree Dutta dutta085@umn.edu Office Hours        Setlem Bhargavi setle002@umn.edu Office Hours</p> <p>Undergraduate TAs </p> <p>Thelma Ade ade00005@umn.edu (Tuesday 11:30 \u2013 12:30 PM) Aaron Olsen olse0366@umn.edu Paris Lim lim00199@umn.edu  (OH: Thursday 3:30 \u2013 4:30 PM </p> <p>Course Description (4.0 credits; Co-Req. PHYS 1302, &amp; MATH 2243 or MATH 2373 or MATH 2573.)</p> <p>Introduction to analog electrical systems with particular emphasis on audio circuits and signals. Time and frequency domain representations. Kirchhoff\u2019s laws. Power. Inductance and Capacitance. Introduction to op-amp circuits and their audio applications. Complex numbers and phasors. Introduction to Fourier Series. RLC circuits &amp; basic filter networks. Laboratory experiments on audio amplifiers, distortion, intermodulation products, low-level differential amplifiers, bass/treble filters.</p> <p>Instruction Lectures (BATRA) Tues, Thurs 9:45 \u2013 11:00 AM Location: Akerman Hall 209. </p> <p>Discussion (BATRA) Monday, 1:25 PM 2:15 PM; Tuesday 12:20 \u2013 1:10 PM                     Ratul Das Wednesday 1:25 \u2013 2:15 PM</p> <p>Location: Keller 3-170 </p> <p>Textbook Electric Circuits, 11th Ed. James Nilsson &amp; Susan Riede. Prentice Hall, 2019.  EE Notes, Emad Ebbini, on canvas, 2018. Homework: 40% credit for late homework.</p> <p>Homework will typically be assigned on Friday and will be due the following Sunday by 10:59pm.  Most homework will be done via the textbook\u2019s website (Mastering Engineering, ME).  Occasionally, we may ask questions via Canvas, where CamScanner, Scanner Pro, or a similar app can be used to create a PDF to upload.</p> <p>Discussion and collaboration (but not copying!) are encouraged for homework assignments. On canvas HomeWorks and all exams, you MUST show your work to receive any credit (partial or full). Answers without proper units or graphs without the axes labeled will be considered incorrect.</p> <p>Exams There will be two midterm exams and a final exam. You may NOT use books, cell phones, computers, other communication devices, etc. As stated above, you must show your work to receive partial credit; proper units and labels for graphs are required for full credit. Exam grade concerns or discrepancies must be submitted in writing within 1 week after exams are returned.</p> <p>Put these in your calendar now. Any reasons to change must be done first week of class: Exam #1:    Tues Feb 25         during class Exam #2:    Thurs Apr. 3        during class Final Exam: Monday May 12           8-10 am (set by university)</p> <p>Please review the official University of Minnesota Student Code of Conduct.</p> <p>Grades Final course grades will be determined based on the following  12% Homework            5%     Discussion attendance            8%     Quiz (TBD) 25% Laboratory 15% Exam 1 15% Exam 2 20% Final Exam The University\u2019s grade definitions can be found here. </p> <p>Expected Workload  EE2015 is a 4-credit course with lecture, laboratory and recitation components. The expected workload for this course is 42 \u2013 45 hours per credit averaged over the course of the semester. This expectation is in accordance with the University Policy found here: https://policy.umn.edu/education/studentwork</p> <p>Disability Accommodations (DRC website or email drc@umn.edu.) The University of Minnesota views disability as an important aspect of diversity, and is committed to providing equitable access to learning opportunities for all students. The Disability Resource Center (DRC) is the campus office that collaborates with students who have disabilities to provide and/or arrange reasonable accommodations. \u2022   If you have, or think you have, a disability in any area such as, mental health, attention, learning, chronic health, sensory, or physical, please contact the DRC office (UM Twin Cities - 612.626.1333) to arrange a confidential discussion regarding equitable access and reasonable accommodations. \u2022   Students with short-term disabilities, such as a broken arm, can often work with me to minimize classroom barriers. In situations where additional assistance is needed, students should contact the DRC as noted above. \u2022   If you are registered with the DRC and have a disability accommodation letter dated for this semester or this year, please contact me the first week of class to review how the accommodations will be applied in the course. \u2022   If I am unable to provide exam accommodations in the department, you will need to schedule them with the DRC and take them in the DRC Testing Center. The Testing Center requires you to schedule exams with at least SEVEN days of advance notice.  To schedule your exams, please complete the online form. \u2022   If you are registered with the DRC and have questions or concerns about your accommodations, contact your (access consultant/disability specialist). Mental Health and Stress Management As a student you may experience a range of issues that can cause barriers to learning, such as strained relationships, increased anxiety, alcohol/drug problems, feeling down, difficulty concentrating and/or lack of motivation. These mental health concerns or stressful events may lead to diminished academic performance or reduce your ability to participate in daily activities. University of Minnesota services are available to assist you with addressing these and other concerns you may be experiencing.  You can learn more about the broad range of confidential mental health services available on campus via  http://www.mentalhealth.umn.edu</p> <p>EE 2015 Lab Requirements: The courses EE2015, EE2115, and EE3101 have connected labs. You will need to keep track of all lab kit components that are provided in this course for use in future courses. Parts that are lost or broken need to be purchased by the student at the ECE Depot (ecestock@umn.edu).</p> <p>You are encouraged to bring your laptop or tablet to the lab for running software and viewing manuals.</p> <p>Course Outline</p> <p>Week    Date    Lecture Topics  Readings    Labs 1   Jan 21/23   Review of Physics and Math Concepts Ch. 1-3 NR &amp; EE Notes   No Lab 2   Jan 28/30   Circuit Analysis using Nodes    Ch. 4 NR    Lab 0 Starts 3   Feb 4/6     Circuit Analysis using Loops    Ch. 4 NR   4   Feb 11/13   Superposition and Source Equivalents    Ch. 4 NR    Lab 0 Notebook; Pre-lab 1.1 5   Feb 18/20   Review and Operational Amplifier Intro          Pre-lab 1.2 6   Feb 25/27   Exam 1, Operational Amplifier Intro Ch. 5 NR    Lab 1 Notebook; Pre-lab 2</p> <p>7   Mar 4/6 Applications of Op Amps and Input/output impedance  EE Notes    Lab 2 Notebook; Pre-lab 3.1     Mar 11/13   Spring Break!      8   Mar 18/20   Inductance, Capacitance &amp; Frequency dep impedance   Ch. 6 &amp;. 7 NR  9   Mar 25/27   Complex Numbers and Phasors Ch. 9 NR    Lab 3 Report, Pre-lab 4.1 10  Apr 1/3 Review, Exam 2      Pre-lab 4.2 11  Apr 8/10    Phasors in Circuits                             Ch. 9 NR    Lab 4 Notebook; Pre-lab 5 12  Apr 15/17   Bode Plots, Filtering   Ch. 14 NR   Lab 5 Report</p> <p>Chain Audio Amplifier Writeup (completed in lab) 13  Apr 22/24   Active Filters  Ch. 15 NR  14  Apr 29/M 1  Fourier Series  Ch. 16 NR  15       (Final May 12 8-10 am)    NR = Nilsson and Riedel : EE Notes = Additional real-life notes provided by Prof. Ebbini on canvas</p> <p>Email Policy In compliance with FERPA and the Minnesota Privacy Act, students must use their University of Minnesota email account for conducting official business with the University of Minnesota. Messages originating from other email addresses will be disregarded.</p> <p>Intellectual Property Lectures, notes, assignments, exams, and all other material for this course the intellectual property of the instructor.  Students may not distribute instructor-provided notes or any other course materials (except to other members of the same class) without the express written consent of the instructor. Students are not permitted to record any part of a class/recitation/other session unless explicitly granted permission by the instructor. Read more about student responsibilities here:  http://policy.umn.edu/education/studentresp</p>"},{"location":"prompts/02-enumeration/#reponse","title":"reponse","text":"<p>Here is the numbered list of 150 essential concepts for the undergraduate course in circuits, ordered from foundational to more advanced topics:  </p> <ol> <li>Electrical charge  </li> <li>Current (I)  </li> <li>Voltage (V)  </li> <li>Power (P)  </li> <li>Energy (W)  </li> <li>Resistance (R)  </li> <li>Ohm\u2019s Law  </li> <li>Conductance (G)  </li> <li>Kirchhoff\u2019s Current Law (KCL)  </li> <li>Kirchhoff\u2019s Voltage Law (KVL)  </li> <li>Node analysis  </li> <li>Loop analysis  </li> <li>Series resistors  </li> <li>Parallel resistors  </li> <li>Voltage division  </li> <li>Current division  </li> <li>Superposition theorem  </li> <li>Thevenin\u2019s theorem  </li> <li>Norton\u2019s theorem  </li> <li>Source transformation  </li> <li>Mesh current method  </li> <li>Nodal voltage method  </li> <li>Dependent sources  </li> <li>Power dissipation in resistors  </li> <li>Maximum power transfer theorem  </li> <li>Delta-Wye (\u0394-Y) transformation  </li> <li>Capacitance (C)  </li> <li>Inductance (L)  </li> <li>Reactance (X)  </li> <li>Impedance (Z)  </li> <li>Admittance (Y)  </li> <li>Capacitors in series  </li> <li>Capacitors in parallel  </li> <li>Inductors in series  </li> <li>Inductors in parallel  </li> <li>Transient response of RC circuits  </li> <li>Transient response of RL circuits  </li> <li>Time constant (\u03c4)  </li> <li>Step response of RC circuits  </li> <li>Step response of RL circuits  </li> <li>Natural response of RC circuits  </li> <li>Natural response of RL circuits  </li> <li>First-order circuits  </li> <li>Second-order circuits  </li> <li>RLC circuits  </li> <li>Resonance in RLC circuits  </li> <li>Quality factor (Q)  </li> <li>Bandwidth (BW)  </li> <li>Damping factor (\u03b6)  </li> <li>Complex numbers  </li> <li>Euler\u2019s formula  </li> <li>Phasors  </li> <li>Sinusoidal steady-state analysis  </li> <li>Impedance in AC circuits  </li> <li>Admittance in AC circuits  </li> <li>Ohm\u2019s Law for AC circuits  </li> <li>Power in AC circuits  </li> <li>Real power (P)  </li> <li>Reactive power (Q)  </li> <li>Apparent power (S)  </li> <li>Power factor (PF)  </li> <li>Power factor correction  </li> <li>RMS (Root Mean Square) values  </li> <li>Instantaneous power  </li> <li>Average power  </li> <li>Complex power  </li> <li>Fourier series  </li> <li>Fourier transform  </li> <li>Frequency response  </li> <li>Bode plots  </li> <li>Poles and zeros  </li> <li>Transfer functions  </li> <li>Low-pass filters (LPF)  </li> <li>High-pass filters (HPF)  </li> <li>Band-pass filters (BPF)  </li> <li>Band-stop filters (BSF)  </li> <li>Active filters  </li> <li>Passive filters  </li> <li>Butterworth filters  </li> <li>Chebyshev filters  </li> <li>Operational amplifiers (Op-Amps)  </li> <li>Ideal Op-Amp assumptions  </li> <li>Inverting Op-Amp  </li> <li>Non-inverting Op-Amp  </li> <li>Voltage follower (buffer)  </li> <li>Summing amplifier  </li> <li>Difference amplifier  </li> <li>Integrator circuit  </li> <li>Differentiator circuit  </li> <li>Instrumentation amplifier  </li> <li>Comparator circuits  </li> <li>Clipping circuits  </li> <li>Clamping circuits  </li> <li>Rectifiers (half-wave and full-wave)  </li> <li>Voltage regulators  </li> <li>Zener diodes  </li> <li>Bipolar Junction Transistor (BJT) basics  </li> <li>BJT as a switch  </li> <li>BJT as an amplifier  </li> <li>Common emitter configuration  </li> <li>Common collector configuration  </li> <li>Common base configuration  </li> <li>Field Effect Transistor (FET) basics  </li> <li>MOSFET operation  </li> <li>MOSFET as a switch  </li> <li>MOSFET as an amplifier  </li> <li>Small-signal analysis  </li> <li>Large-signal analysis  </li> <li>Amplifier gain (voltage, current, and power)  </li> <li>Input and output impedance  </li> <li>Feedback in circuits  </li> <li>Negative feedback  </li> <li>Positive feedback  </li> <li>Oscillators  </li> <li>Wien bridge oscillator  </li> <li>Colpitts oscillator  </li> <li>Hartley oscillator  </li> <li>Schmitt triggers  </li> <li>Pulse circuits  </li> <li>Digital logic levels  </li> <li>Boolean algebra  </li> <li>Logic gates (AND, OR, NOT, XOR, etc.)  </li> <li>Combinational logic circuits  </li> <li>Sequential logic circuits  </li> <li>Flip-flops (SR, D, JK, T)  </li> <li>Counters  </li> <li>Shift registers  </li> <li>Memory elements (SRAM, DRAM)  </li> <li>Analog-to-Digital Converters (ADC)  </li> <li>Digital-to-Analog Converters (DAC)  </li> <li>PWM (Pulse Width Modulation)  </li> <li>Power electronics basics  </li> <li>Switching regulators (Buck, Boost, Buck-Boost)  </li> <li>Linear regulators  </li> <li>Transformers  </li> <li>Mutual inductance  </li> <li>Coupled circuits  </li> <li>Audio amplifiers  </li> <li>Distortion and intermodulation  </li> <li>Differential amplifiers  </li> <li>Common-mode rejection ratio (CMRR)  </li> <li>Noise in circuits  </li> <li>Thermal noise  </li> <li>Shot noise  </li> <li>Electromagnetic interference (EMI)  </li> <li>Signal integrity  </li> <li>Transmission lines  </li> <li>Wave propagation in circuits  </li> <li>Smith charts  </li> <li>PCB design considerations  </li> </ol> <p>This list follows a logical progression from basic electrical principles to advanced circuit concepts used in signal processing and audio applications. Let me know if you'd like modifications!</p>"}]}